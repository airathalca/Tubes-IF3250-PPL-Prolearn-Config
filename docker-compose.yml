version: "3.8"
services:
  # Nginx Server
  proxy:
    image: nginx:1.23.3
    container_name: prolearn-proxy
    restart: always
    hostname: prolearn-proxy-server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network

  # Nest.js Server Framework
  api:
    build:
      context: ./prolearn-backend
      dockerfile: Dockerfile
    container_name: prolearn-api
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PORT: ${POSTGRES_PORT}
      DATABASE_CACHE_HOSTNAME: ${DATABASE_CACHE_HOSTNAME}
      DATABASE_CACHE_PORT: ${DATABASE_CACHE_PORT}
      API_CACHE_HOSTNAME: ${API_CACHE_HOSTNAME}
      API_CACHE_PORT: ${API_CACHE_PORT}
      QUEUE_CACHE_HOSTNAME: ${QUEUE_CACHE_HOSTNAME}
      QUEUE_CACHE_PORT: ${QUEUE_CACHE_PORT}
      BUCKET_NAME: ${BUCKET_NAME}
      JWT_SECRET: ${JWT_SECRET}
      EXPIRES_IN: ${EXPIRES_IN}
    hostname: prolearn-api-server
    volumes:
      - ./prolearn-backend:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - database
      - database-cache
      - api-cache
      - queue

  # Next.js Client Framework
  client:
    build:
      context: ./prolearn-frontend
      dockerfile: Dockerfile
    container_name: prolearn-client
    restart: always
    hostname: prolearn-client-server
    volumes:
      - ./prolearn-frontend:/app
      - /app/node_modules
    networks:
      - app-network

  # PostgreSQL Database
  database:
    image: postgres:15.1
    container_name: prolearn-database
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    hostname: prolearn-database-server
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - app-network

  # Database Cache
  database-cache:
    image: redis:7.0.8
    container_name: prolearn-database-cache
    restart: always
    hostname: prolearn-database-cache-server
    volumes:
      - database-cache:/data
    networks:
      - app-network

  # API Cache
  api-cache:
    image: redis:7.0.8
    container_name: prolearn-api-cache
    restart: always
    hostname: prolearn-api-cache-server
    volumes:
      - api-cache:/data
    networks:
      - app-network

  # Queue
  queue:
    image: redis:7.0.8
    container_name: prolearn-queue
    restart: always
    hostname: prolearn-queue-server
    volumes:
      - queue:/data
    networks:
      - app-network

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  postgres:
    driver: local
  database-cache:
    driver: local
  api-cache:
    driver: local
  queue:
    driver: local
